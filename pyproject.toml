[tool.poetry]
name = "gaps"
version = "0.1.1"
description = "Generalized assignment problem solver"
authors = ["Stijn de Gooijer <stijn@degooijer.io>"]
license = "MIT"
keywords = ["assignment", "assign", "optimizer", "search"]
repository = "https://github.com/stinodego/gaps"
readme = "README.md"
packages = [
    { include = "gaps", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.7"
frozendict = "^2.0.3"

[tool.poetry.dev-dependencies]
black = "^21.7b0"
isort = "^5.9.2"
pylint = "^2.9.3"
mypy = "^0.910"
pytest = "^6.2.4"
coverage = {extras = ["toml"], version = "^5.5"}

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']

[tool.isort]
profile = "black"

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true
files = "src"

[tool.pytest.ini_options]

[tool.coverage]
    [tool.coverage.run]
    source = ["src"]
    branch = true
    [tool.coverage.report]
    skip_covered = true
    show_missing = true
    exclude_lines = [
        "if __name__ == .__main__.:",
        "pragma: no cover",
    ]
